
{
  "entities": {
    "Business": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Business",
      "type": "object",
      "description": "Represents a business entity in the directory. A business can be upgraded to a Vendor to sell in the marketplace.",
      "properties": {
        "businessName": {
          "type": "string",
          "description": "The name of the business."
        },
        "abn": {
          "type": "string",
          "description": "Australian Business Number of the business."
        },
        "abnVerified": {
            "type": "boolean",
            "description": "Flag indicating if the ABN has been successfully validated. If true, a 'Verified' badge is shown."
        },
        "email": {
          "type": "string",
          "description": "Contact email address for the business.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "Contact phone number for the business."
        },
        "website": {
          "type": "string",
          "description": "The business's website URL.",
          "format": "uri"
        },
        "address": {
          "type": "string",
          "description": "The physical address of the business."
        },
        "stripeAccountId": {
          "type": "string",
          "description": "Stripe account ID associated with the business, populated after successful hand-off."
        },
        "paymentsEnabled": {
            "type": "boolean",
            "description": "Flag indicating if the Business has been approved by an Admin to become a Vendor. If true, they can create listings and receive payments."
        },
        "reviewCount": {
            "type": "number",
            "description": "The total number of reviews for this business."
        },
        "averageRating": {
            "type": "number",
            "description": "The average rating for this business, from 1 to 5."
        },
        "latitude": {
            "type": "number",
            "description": "The latitude of the business location."
        },
        "longitude": {
            "type": "number",
            "description": "The longitude of the business location."
        },
        "refundPolicyUrl": {
            "type": "string",
            "description": "URL to the vendor's refund policy."
        },
        "supportEmail": {
            "type": "string",
            "format": "email",
            "description": "The vendor's customer support email address."
        },
        "fulfilmentTerms": {
            "type": "string",
            "description": "A description of the vendor's fulfillment terms for local delivery."
        }
      },
      "required": [
        "businessName",
        "abn",
        "email",
        "address",
        "paymentsEnabled",
        "abnVerified"
      ]
    },
    "Listing": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Listing",
      "type": "object",
      "description": "Represents a marketplace listing offered by a Vendor.",
      "properties": {
        "vendorId": {
          "type": "string",
          "description": "The ID of the Vendor who owns this listing."
        },
        "listingName": {
          "type": "string",
          "description": "The name of the product or service."
        },
        "description": {
          "type": "string",
          "description": "A detailed description of the listing."
        },
        "price": {
          "type": "number",
          "description": "Price of the listing."
        },
        "category": {
          "type": "string",
          "description": "The category that this listing belongs to."
        },
        "imageUrl": {
            "type": "string",
            "description": "URL of an image for the listing."
        },
        "deliveryMethod": {
            "type": "string",
            "description": "The method of delivery for the listing.",
            "enum": ["Pickup Only", "Local Delivery Available"]
        }
      },
      "required": [
        "vendorId",
        "listingName",
        "description",
        "price",
        "category",
        "deliveryMethod",
        "imageUrl"
      ]
    },
    "ForumThread": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Forum Thread",
      "type": "object",
      "description": "Represents a single discussion thread in the Civic Hub.",
      "properties": {
        "title": { "type": "string" },
        "authorName": { "type": "string" },
        "authorAvatarUrl": { "type": "string" },
        "timestamp": { "type": "string" },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "variant": { "type": "string", "enum": ["default", "secondary", "destructive", "outline"] },
              "isCouncil": { "type": "boolean" }
            },
            "required": ["name", "variant"]
          }
        }
      },
      "required": ["title", "authorName", "timestamp"]
    },
    "ForumPost": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Forum Post",
      "type": "object",
      "description": "Represents a single post within a forum thread.",
      "properties": {
        "authorId": { "type": "string" },
        "authorName": { "type": "string" },
        "authorAvatarUrl": { "type": "string" },
        "timestamp": { "type": "string" },
        "content": { "type": "string" }
      },
      "required": ["authorId", "authorName", "timestamp", "content"]
    },
    "CommunityEvent": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Community Event",
      "type": "object",
      "description": "Represents a local community event.",
      "properties": {
        "title": { "type": "string" },
        "date": { "type": "string" },
        "location": { "type": "string" },
        "description": { "type": "string" },
        "details": { "type": "string" },
        "imageId": { "type": "string" }
      },
      "required": ["title", "date", "location", "description", "details", "imageId"]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents a customer order for a Vendor's listing.",
      "properties": {
        "listingName": { "type": "string" },
        "buyerId": { "type": "string" },
        "vendorId": { "type": "string" },
        "date": { "type": "string", "format": "date-time" },
        "amount": { "type": "number" },
        "status": {
          "type": "string",
          "enum": ["Pending", "Completed", "Refunded", "FAILED_PAYMENT"]
        },
        "paymentIntentId": {
          "type": "string",
          "description": "The Stripe Payment Intent ID associated with this order."
        },
        "fulfilmentEta": { "type": "string" },
        "commChannelId": { "type": "string" }
      },
      "required": ["listingName", "buyerId", "vendorId", "date", "amount", "status", "paymentIntentId"]
    },
    "Review": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Review",
        "type": "object",
        "description": "Represents a Resident's review for a Business or Vendor.",
        "properties": {
          "residentId": { "type": "string" },
          "residentName": { "type": "string" },
          "rating": { "type": "number", "minimum": 1, "maximum": 5 },
          "comment": { "type": "string" },
          "timestamp": { "type": "string", "format": "date-time" }
        },
        "required": ["residentId", "residentName", "rating", "comment", "timestamp"]
    },
    "CheckoutSession": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Checkout Session",
        "type": "object",
        "description": "Data sent to the Stripe checkout session API.",
        "properties": {
            "listing": {
                "type": "object",
                "properties": {
                    "listingName": { "type": "string" },
                    "description": { "type": "string" },
                    "price": { "type": "number" }
                },
                "required": ["listingName", "description", "price"]
            },
            "vendorStripeAccountId": { "type": "string" },
            "vendorId": { "type": "string" },
            "listingId": { "type": "string" }
        },
        "required": ["listing", "vendorStripeAccountId", "vendorId", "listingId"]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a basic registered user (a Resident). They can be upgraded to a Business.",
      "properties": {
        "uid": { "type": "string" },
        "email": { "type": "string", "format": "email" },
        "displayName": { "type": "string" }
      },
      "required": ["uid", "email"]
    },
    "CommunicationChannel": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CommunicationChannel",
      "type": "object",
      "description": "A communication channel for an order between a buyer and a vendor.",
      "properties": {
        "orderId": { "type": "string" },
        "buyerId": { "type": "string" },
        "vendorId": { "type": "string" },
        "status": { "type": "string", "enum": ["OPEN", "CLOSED"] }
      },
      "required": ["orderId", "buyerId", "vendorId", "status"]
    },
    "Message": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Message",
      "type": "object",
      "description": "A message within a communication channel.",
      "properties": {
        "commChannelId": { "type": "string" },
        "senderId": { "type": "string" },
        "role": { "type": "string", "enum": ["buyer", "vendor", "system"] },
        "body": { "type": "string" },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": ["commChannelId", "senderId", "role", "body", "createdAt"]
    },
    "Agreement": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Agreement",
      "type": "object",
      "description": "A legal agreement document.",
      "properties": {
        "type": { "type": "string", "enum": ["buyer_tos", "vendor_tos", "refund_policy"] },
        "version": { "type": "string" },
        "url": { "type": "string", "format": "uri" },
        "_lastValidated": { "type": "string", "format": "date-time" }
      },
      "required": ["type", "version", "url", "_lastValidated"]
    },
    "Consent": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Consent",
      "type": "object",
      "description": "A record of a user's consent to a legal agreement.",
      "properties": {
        "userId": { "type": "string" },
        "agreementId": { "type": "string" },
        "version": { "type": "string" },
        "ip": { "type": "string" },
        "ua": { "type": "string" },
        "timestamp": { "type": "string", "format": "date-time" }
      },
      "required": ["userId", "agreementId", "version", "timestamp"]
    },
     "RefundRequest": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "RefundRequest",
      "type": "object",
      "description": "A request for a refund on an order.",
      "properties": {
        "orderId": { "type": "string" },
        "buyerId": { "type": "string" },
        "vendorId": { "type": "string" },
        "reason": { "type": "string" },
        "attachments": { "type": "array", "items": { "type": "string" } },
        "state": { "type": "string", "enum": ["OPEN", "VENDOR_REVIEW", "STRIPE_PROCESSING", "RESOLVED", "REJECTED", "ESCALATED"] },
        "stripeRefundId": { "type": "string" },
        "decision": { "type": "string" },
        "decisionBy": { "type": "string" },
        "decisionAt": { "type": "string", "format": "date-time" }
      },
      "required": ["orderId", "buyerId", "vendorId", "reason", "state"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "google.com"
    ]
  },
  "firestore": {
    "/vendors/{vendorId}": {
      "schema": {
        "$ref": "#/entities/Business"
      },
      "description": "Stores documents for each business in the directory. A document in this collection represents a 'Business'. If 'paymentsEnabled' is true, they are considered a 'Vendor'."
    },
    "/vendors/{vendorId}/listings/{listingId}": {
      "schema": {
        "$ref": "#/entities/Listing"
      },
      "description": "Stores all listings for a specific Vendor as a sub-collection."
    },
    "/vendors/{vendorId}/orders/{orderId}": {
        "schema": {
            "$ref": "#/entities/Order"
        },
        "description": "Stores all orders for a specific Vendor."
    },
     "/vendors/{vendorId}/reviews/{reviewId}": {
        "schema": {
            "$ref": "#/entities/Review"
        },
        "description": "Stores all reviews for a specific Business."
    },
     "/vendors/{vendorId}/refund_requests/{requestId}": {
        "schema": {
            "$ref": "#/entities/RefundRequest"
        },
        "description": "Stores all refund requests for a specific Vendor."
    },
    "/forumThreads/{threadId}": {
      "schema": {
        "$ref": "#/entities/ForumThread"
      },
      "description": "Stores all discussion threads for the Civic Hub."
    },
    "/forumThreads/{threadId}/posts/{postId}": {
      "schema": {
        "$ref": "#/entities/ForumPost"
      },
      "description": "Stores all posts for a specific forum thread."
    },
    "/communityEvents/{eventId}": {
        "schema": {
            "$ref": "#/entities/CommunityEvent"
        },
        "description": "Stores all events for the Civic Hub."
    },
    "/comm_channels/{channelId}": {
      "schema": {
        "$ref": "#/entities/CommunicationChannel"
      },
      "description": "Stores communication channels for orders."
    },
    "/comm_channels/{channelId}/messages/{messageId}": {
      "schema": {
        "$ref": "#/entities/Message"
      },
      "description": "Stores messages within a communication channel."
    },
     "/agreements/{agreementId}": {
      "schema": {
        "$ref": "#/entities/Agreement"
      },
      "description": "Stores legal agreement documents."
    },
    "/consents/{consentId}": {
      "schema": {
        "$ref": "#/entities/Consent"
      },
      "description": "Stores records of user consents to agreements."
    }
  }
}
